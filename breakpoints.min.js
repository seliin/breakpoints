/*
 * Breakpoints.js
 * Version 3.0
 * 
 * Creates handy events for your responsive design breakpoints.
 * Use it like this to bind to certain breakpoint changes:
 * 
 * breakpoints([0, 480, 960], function(oldP, newP) { 
 *   console.log(oldP, newP)
 * });
 * 
 * Version 1.0 written and copyright by XOXCO, Inc
 * http://xoxco.com/
 * 
 * Version 2.0 and 3.0 rewrite and copyright by Eike Send
 * http://eike.se/nd
 * 
 * Licensed under the MIT license:
 * http://www.opensource.org/licenses/mit-license.php
 *
 */(function(){var a=currentBP=-1,b;breakpoints=function(a,d){b=a.sort(function(a,b){return a-b}),window.addEventListener?window.addEventListener("resize",c,!1):window.attachEvent&&window.attachEvent("onresize",c),d&&breakpoints.bind(d),c()};var c=function(){var c=document.documentElement.clientWidth,d=document.compatMode==="CSS1Compat"&&c||document.body&&document.body.clientWidth||c;currentBP=breakpoints.getCurrentBreakPoint(b,d);if(a!=currentBP){var e=[];for(var g=0;g<b.length;g++){var h=b[g];(h>=a&&h<=currentBP||h>=currentBP&&h<=a)&&e.push(h)}currentBP<a&&(e=e.reverse());for(var g=0;g<e.length;g++)f(e[g]);a=currentBP}};breakpoints.getCurrentBreakPoint=function(a,b){for(var c in a){c=parseInt(c);if(b>=a[c]&&(a.length==c+1||b<a[c+1]))return a[c]}return 0};var d=[],e=[];breakpoints.bind=function(a){e.push(a);if(d.length)for(var b=1;b<d.length;b++)a(d[b-1],d[b])};var f=function(a){for(var b=0;b<e.length;b++){var c=e[b];d.length>0&&d[d.length-1]!=a&&c(d[d.length-1],a)}d.push(a)}})()